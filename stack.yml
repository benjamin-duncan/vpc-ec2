Resources:
  testVPC9243D9F8:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: vpc-ec2/testVPC
    Metadata:
      aws:cdk:path: vpc-ec2/testVPC/Resource
  testVPCPublicSubnet1Subnet9AD0D2A9:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId:
        Ref: testVPC9243D9F8
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: vpc-ec2/testVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: vpc-ec2/testVPC/PublicSubnet1/Subnet
  testVPCPublicSubnet1RouteTable043394D9:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: testVPC9243D9F8
      Tags:
        - Key: Name
          Value: vpc-ec2/testVPC/PublicSubnet1
    Metadata:
      aws:cdk:path: vpc-ec2/testVPC/PublicSubnet1/RouteTable
  testVPCPublicSubnet1RouteTableAssociationCEBD5DB7:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: testVPCPublicSubnet1RouteTable043394D9
      SubnetId:
        Ref: testVPCPublicSubnet1Subnet9AD0D2A9
    Metadata:
      aws:cdk:path: vpc-ec2/testVPC/PublicSubnet1/RouteTableAssociation
  testVPCPublicSubnet1DefaultRoute71B8E63D:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: testVPCPublicSubnet1RouteTable043394D9
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: testVPCIGW673AA044
    DependsOn:
      - testVPCVPCGW6D054581
    Metadata:
      aws:cdk:path: vpc-ec2/testVPC/PublicSubnet1/DefaultRoute
  testVPCPublicSubnet2Subnet3690B937:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: testVPC9243D9F8
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: vpc-ec2/testVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: vpc-ec2/testVPC/PublicSubnet2/Subnet
  testVPCPublicSubnet2RouteTable43C3768D:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: testVPC9243D9F8
      Tags:
        - Key: Name
          Value: vpc-ec2/testVPC/PublicSubnet2
    Metadata:
      aws:cdk:path: vpc-ec2/testVPC/PublicSubnet2/RouteTable
  testVPCPublicSubnet2RouteTableAssociation00FEE131:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: testVPCPublicSubnet2RouteTable43C3768D
      SubnetId:
        Ref: testVPCPublicSubnet2Subnet3690B937
    Metadata:
      aws:cdk:path: vpc-ec2/testVPC/PublicSubnet2/RouteTableAssociation
  testVPCPublicSubnet2DefaultRoute7EB029C2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: testVPCPublicSubnet2RouteTable43C3768D
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: testVPCIGW673AA044
    DependsOn:
      - testVPCVPCGW6D054581
    Metadata:
      aws:cdk:path: vpc-ec2/testVPC/PublicSubnet2/DefaultRoute
  testVPCIsolated1aSubnet1Subnet9C1D833B:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.2.0/24
      VpcId:
        Ref: testVPC9243D9F8
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Isolated1a
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: vpc-ec2/testVPC/Isolated1aSubnet1
    Metadata:
      aws:cdk:path: vpc-ec2/testVPC/Isolated1aSubnet1/Subnet
  testVPCIsolated1aSubnet1RouteTableFFD32F8D:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: testVPC9243D9F8
      Tags:
        - Key: Name
          Value: vpc-ec2/testVPC/Isolated1aSubnet1
    Metadata:
      aws:cdk:path: vpc-ec2/testVPC/Isolated1aSubnet1/RouteTable
  testVPCIsolated1aSubnet1RouteTableAssociation5AF62FC9:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: testVPCIsolated1aSubnet1RouteTableFFD32F8D
      SubnetId:
        Ref: testVPCIsolated1aSubnet1Subnet9C1D833B
    Metadata:
      aws:cdk:path: vpc-ec2/testVPC/Isolated1aSubnet1/RouteTableAssociation
  testVPCIsolated1aSubnet2SubnetF2B5E206:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.3.0/24
      VpcId:
        Ref: testVPC9243D9F8
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Isolated1a
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: vpc-ec2/testVPC/Isolated1aSubnet2
    Metadata:
      aws:cdk:path: vpc-ec2/testVPC/Isolated1aSubnet2/Subnet
  testVPCIsolated1aSubnet2RouteTable06E6DD96:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: testVPC9243D9F8
      Tags:
        - Key: Name
          Value: vpc-ec2/testVPC/Isolated1aSubnet2
    Metadata:
      aws:cdk:path: vpc-ec2/testVPC/Isolated1aSubnet2/RouteTable
  testVPCIsolated1aSubnet2RouteTableAssociationBD8D63DB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: testVPCIsolated1aSubnet2RouteTable06E6DD96
      SubnetId:
        Ref: testVPCIsolated1aSubnet2SubnetF2B5E206
    Metadata:
      aws:cdk:path: vpc-ec2/testVPC/Isolated1aSubnet2/RouteTableAssociation
  testVPCIGW673AA044:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: vpc-ec2/testVPC
    Metadata:
      aws:cdk:path: vpc-ec2/testVPC/IGW
  testVPCVPCGW6D054581:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: testVPC9243D9F8
      InternetGatewayId:
        Ref: testVPCIGW673AA044
    Metadata:
      aws:cdk:path: vpc-ec2/testVPC/VPCGW
  InstanceSSMCBFA3CF0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: vpc-ec2/InstanceSSM/Resource
  SecurityGroupDD263621:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: vpc-ec2/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: SSH
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      VpcId:
        Ref: testVPC9243D9F8
    Metadata:
      aws:cdk:path: vpc-ec2/SecurityGroup/Resource
  InstanceInstanceProfileAB5AEF02:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: InstanceSSMCBFA3CF0
    Metadata:
      aws:cdk:path: vpc-ec2/Instance/InstanceProfile
  InstanceC1063A87:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      IamInstanceProfile:
        Ref: InstanceInstanceProfileAB5AEF02
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.micro
      KeyName: NewKP
      SecurityGroupIds:
        - Fn::GetAtt:
            - SecurityGroupDD263621
            - GroupId
      SubnetId:
        Ref: testVPCPublicSubnet1Subnet9AD0D2A9
      Tags:
        - Key: Name
          Value: vpc-ec2/Instance
      UserData:
        Fn::Base64: "#!/bin/bash"
    DependsOn:
      - InstanceSSMCBFA3CF0
    Metadata:
      aws:cdk:path: vpc-ec2/Instance/Resource
  DBSecretD58955BC:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludePunctuation: true
        GenerateStringKey: password
        IncludeSpace: false
        SecretStringTemplate: '{"username": "postgres"}'
      Name: db-secret
    Metadata:
      aws:cdk:path: vpc-ec2/DBSecret/Resource
  DBSecretAttachmentC565A14F:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: DBSecretD58955BC
      TargetId:
        Ref: DatabaseB269D8BB
      TargetType: AWS::RDS::DBInstance
    Metadata:
      aws:cdk:path: vpc-ec2/DBSecret/Attachment/Resource
  DatabaseSubnetGroup7D60F180:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for Database database
      SubnetIds:
        - Ref: testVPCIsolated1aSubnet1Subnet9C1D833B
        - Ref: testVPCIsolated1aSubnet2SubnetF2B5E206
    Metadata:
      aws:cdk:path: vpc-ec2/Database/SubnetGroup/Default
  DatabaseSecurityGroup5C91FDCB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Database database
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: testVPC9243D9F8
    Metadata:
      aws:cdk:path: vpc-ec2/Database/SecurityGroup/Resource
  DatabaseB269D8BB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t2.micro
      AllocatedStorage: "100"
      CopyTagsToSnapshot: true
      DBSubnetGroupName:
        Ref: DatabaseSubnetGroup7D60F180
      Engine: postgres
      EngineVersion: "12.4"
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: DBSecretD58955BC
            - :SecretString:username::}}
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: DBSecretD58955BC
            - :SecretString:password::}}
      PubliclyAccessible: false
      StorageType: gp2
      VPCSecurityGroups:
        - Fn::GetAtt:
            - DatabaseSecurityGroup5C91FDCB
            - GroupId
    UpdateReplacePolicy: Snapshot
    Metadata:
      aws:cdk:path: vpc-ec2/Database/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.89.0,@aws-cdk/assets=1.89.0,@aws-cdk/aws-applicationautoscaling=1.89.0,@aws-cdk/aws-autoscaling-common=1.89.0,@aws-cdk/aws-cloudwatch=1.89.0,@aws-cdk/aws-codeguruprofiler=1.89.0,@aws-cdk/aws-ec2=1.89.0,@aws-cdk/aws-ecr=1.89.0,@aws-cdk/aws-ecr-assets=1.89.0,@aws-cdk/aws-efs=1.89.0,@aws-cdk/aws-events=1.89.0,@aws-cdk/aws-iam=1.89.0,@aws-cdk/aws-kms=1.89.0,@aws-cdk/aws-lambda=1.89.0,@aws-cdk/aws-logs=1.89.0,@aws-cdk/aws-rds=1.89.0,@aws-cdk/aws-s3=1.89.0,@aws-cdk/aws-s3-assets=1.89.0,@aws-cdk/aws-sam=1.89.0,@aws-cdk/aws-secretsmanager=1.89.0,@aws-cdk/aws-sns=1.89.0,@aws-cdk/aws-sns-subscriptions=1.89.0,@aws-cdk/aws-sqs=1.89.0,@aws-cdk/aws-ssm=1.89.0,@aws-cdk/cloud-assembly-schema=1.89.0,@aws-cdk/core=1.89.0,@aws-cdk/cx-api=1.89.0,@aws-cdk/region-info=1.89.0,jsii-runtime=Python/3.8.3
    Metadata:
      aws:cdk:path: vpc-ec2/CDKMetadata/Default
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

